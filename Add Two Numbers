/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
         if (l1 == null) {
            return l2;
        }
        if (l2 == null) {
            return l1;
        }
        ListNode answer = new ListNode(l1.val + l2.val);
        l1 = l1.next;
        l2 = l2.next;
        int sum = 0;
        int carry = 0;
        int prev = 0;
        while (l1 != null || l2 != null) {
            int x = 0, y = 0;
            if (l1 != null) {
                x = l1.val;
            }
            if (l2 != null) {
                y = l2.val;
            }
            sum = x + y + carry + prev;
            boolean flag = false;
            if (sum > 9) {
                flag = true;
                carry = sum % 10;
                prev = sum / 10;
            }
            if (flag) {
                answer.next = new ListNode(carry);
            } else {
                answer.next = new ListNode(sum);
            }

            answer = answer.next;
            if(l1 != null || (l1 != null ? l1.next : null) != null){l1 = l1.next;}
            if(l2 != null || (l2 != null ? l2.next : null) != null){l2 = l2.next;}
        }
        return answer;
}
}
