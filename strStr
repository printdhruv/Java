/* Programmer     : Dhruv Patel
*  Problem Name   : Repeated String
*  Used In        : hackerrank Hour12 contest
*  Used As        : Repeated String
*  Thoughts     => 
*  /**
* Returns a index to the first occurrence of target in source,or -1  if target is not part of source.
* @param source string to be scanned. @param target string containing the sequence of characters to match.We have checked 
* obvious cases like null string and empty cases and covered in the if and else conditions.The core part of a part of a problem
* to count occurence of a target string from the source string and if the match is found than we simply return the i th index from 
* deducting the length of a target string.
*/
public int strStr(String source, String target) {
        if(source == "" &&  target == ""){
            return 0;
        }
        if(source=="" || source == null) {
            return -1;
        }
        if(target=="" ) {
            return 0;
        }
        if(target == null) {
            return -1;
        }
        if(target.equals(source)) {
            return 0;
        }
        int j=0;
        for(int i=0;i<source.length();i++) {                                     // Iterating thorugh the source string
            if(source.charAt(i)==target.charAt(j)) {                             // If source and target index values are matched
                if(j<target.length()) {                                          // Then we iterate thorugh the target value to check
                j++;                                                             // the whole string is matched or not.
                }
                if(j==target.length()) {                                         // If the target length is matched 
                return i-target.length()+1;                                      // Then we return the value of i where source character
                }                                                                // is originated.
            }
        }
        return -1;
    }
}
